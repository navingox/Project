[{"F:\\newGOX\\my-app\\src\\index.js":"1","F:\\newGOX\\my-app\\src\\App.js":"2","F:\\newGOX\\my-app\\src\\reportWebVitals.js":"3","F:\\newGOX\\my-app\\src\\components\\Home.js":"4","F:\\newGOX\\my-app\\src\\components\\Category.js":"5","F:\\newGOX\\my-app\\src\\components\\Bottombar.js":"6","F:\\newGOX\\my-app\\src\\components\\AddProduct.jsx":"7","F:\\newGOX\\my-app\\src\\components\\Search.js":"8","F:\\newGOX\\my-app\\src\\components\\Recommended.js":"9","F:\\newGOX\\my-app\\src\\components\\Cart.js":"10","F:\\newGOX\\my-app\\src\\components\\Profile.js":"11","F:\\newGOX\\my-app\\src\\components\\Product.js":"12","F:\\newGOX\\my-app\\src\\components\\Items.js":"13","F:\\newGOX\\my-app\\src\\context\\CartContext.js":"14","F:\\newGOX\\my-app\\src\\components\\Model.js":"15","F:\\newGOX\\my-app\\src\\components\\Axios.js":"16","F:\\newGOX\\my-app\\src\\components\\axios.js":"17","F:\\newGOX\\my-app\\src\\components\\Bottom.js":"18"},{"size":590,"mtime":1609834696368,"results":"19","hashOfConfig":"20"},{"size":980,"mtime":1611039772343,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":1280,"mtime":1611078068809,"results":"23","hashOfConfig":"20"},{"size":1104,"mtime":1611078322587,"results":"24","hashOfConfig":"20"},{"size":1941,"mtime":1610372145135,"results":"25","hashOfConfig":"20"},{"size":4794,"mtime":1611074054680,"results":"26","hashOfConfig":"20"},{"size":3476,"mtime":1610457912255,"results":"27","hashOfConfig":"20"},{"size":1382,"mtime":1610292106325,"results":"28","hashOfConfig":"20"},{"size":6051,"mtime":1611074046176,"results":"29","hashOfConfig":"20"},{"size":3190,"mtime":1610438009353,"results":"30","hashOfConfig":"20"},{"size":6300,"mtime":1610457540739,"results":"31","hashOfConfig":"20"},{"size":3014,"mtime":1610458022244,"results":"32","hashOfConfig":"20"},{"size":320,"mtime":1610287998252,"results":"33","hashOfConfig":"20"},{"size":7962,"mtime":1610457219160,"results":"34","hashOfConfig":"20"},{"size":136,"mtime":1610287137637,"results":"35","hashOfConfig":"20"},{"size":136,"mtime":1610287137637,"results":"36","hashOfConfig":"20"},{"size":2620,"mtime":1610443013551,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1wvp6rt",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"F:\\newGOX\\my-app\\src\\index.js",[],["84","85"],"F:\\newGOX\\my-app\\src\\App.js",[],"F:\\newGOX\\my-app\\src\\reportWebVitals.js",[],"F:\\newGOX\\my-app\\src\\components\\Home.js",[],"F:\\newGOX\\my-app\\src\\components\\Category.js",[],"F:\\newGOX\\my-app\\src\\components\\Bottombar.js",["86"],"import React ,{useContext}from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport './main.css';\r\nimport {CartContext} from '../context/CartContext';\r\n\r\nconst Bottombar = () => {\r\n\r\n    const[Item,setItem]=useContext(CartContext);\r\n\r\n    return (\r\n        <div className=\"mycontainer\">\r\n            <div className=\"container\">\r\n                <div className=\"row \">\r\n                   <nav className=\"tab-content navbar\">\r\n        \r\n                        <div className=\"tab\">\r\n                            <NavLink activeClassName=\"navbar__link--active\" to='/' style={{ \"textDecoration\": 'none'}}>\r\n                               <i className=\"fas fa-home\" ></i>\r\n                               <p>Home</p>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className=\"tab\">\r\n                            <NavLink to='/search' style={{ \"textDecoration\": 'none'}}>\r\n                               <i className=\"fas fa-search\" ></i>\r\n                               <p>Search</p>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className=\"tab\">\r\n                            <NavLink to='/cart' style={{ \"textDecoration\": 'none'}} >\r\n                            <i className=\"fas fa-shopping-bag \"></i>\r\n                            <p>Cart <span className=\"CartIconRound\" >{Item}</span></p>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className=\"tab\">\r\n                            <NavLink to='/profile' style={{ \"textDecoration\": 'none'}}>\r\n                            <i className=\"fas fa-user\" ></i>\r\n                            <p>Profile</p>\r\n                            </NavLink>\r\n                        </div>\r\n                      \r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bottombar\r\n","F:\\newGOX\\my-app\\src\\components\\AddProduct.jsx",[],"F:\\newGOX\\my-app\\src\\components\\Search.js",["87","88"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from './axios';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport Bottombar from './Bottombar';\r\nimport './main.css';\r\nimport Model from './Model';\r\nimport \"./Modal.css\";\r\nimport './Search.css';\r\nimport Bottom from './Bottom';\r\n\r\nconst Search = () => {\r\n    const [searchValue, SetsearchValue] = useState('');\r\n    const [searchResult, SetsearchResult] = useState([]);\r\n    const [found, Setfound] = useState(false);\r\n\r\n    const modalRef = useRef();\r\n\r\n    const fetchSearchResult = (e) => {\r\n        getSearchResult();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSearchResult();\r\n    }, [searchValue]);\r\n\r\n    const getSearchResult = async () => {\r\n        axios.get(`/search/${searchValue.val}`).then(res => {\r\n            console.log(res.data.data);\r\n            SetsearchResult(res.data.data);\r\n            Setfound(true);\r\n        })\r\n    }\r\n\r\n    const handleModal = (val) => {\r\n        modalRef.current.call(val);\r\n        modalRef.current.open();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <SearchBar\r\n                            value={searchValue.val}\r\n                            placeholder=\"Search Products ...\"\r\n                            onChange={(newValue) => SetsearchValue({ val: newValue })}\r\n                            onRequestSearch={(newValue) => fetchSearchResult({ val: newValue })}\r\n                            style={{ borderRadius: \"20px\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"row p-4\">\r\n                    <div className=\"col\">\r\n                        <div className=\"SearchResultNumber\">\r\n                            {found && <h5 className=\"text-muted float-left\">FOUND {searchResult.length} RESULTS</h5>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row p-2\">\r\n                    <div className=\"col\">\r\n                    <div class=\"wrapper\">\r\n                        {searchResult.map(item => (\r\n                            <div key={item.imageId} onClick={() => handleModal(item.groupId)}>\r\n                                <div className=\"col\">\r\n                                    <div className=\"Search__Cards\">\r\n                                        <div className=\"card Search__card\" style={{ width: \"8rem\" }}>\r\n                                            <img className=\"card-img-top img-fluid rounded\" src={item.productImagePath} alt={item.categoryName} />\r\n                                            <div className=\"card-body\">\r\n                                                <p className=\"card-text CategoryRecommended__Name\">{item.categoryName}</p>\r\n                                                <p className=\"card-text\">$ {item.price}</p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <Model ref={modalRef}></Model>\r\n            </div>\r\n            <Bottom data={2} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","F:\\newGOX\\my-app\\src\\components\\Recommended.js",[],"F:\\newGOX\\my-app\\src\\components\\Cart.js",["89","90","91","92"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Bottombar from './Bottombar';\r\nimport axios from './axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CartContext } from '../context/CartContext';\r\nimport './Cart.css';\r\nimport Bottom from './Bottom';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 300,\r\n    },\r\n});\r\n\r\nconst Cart = () => {\r\n    const classes = useStyles();\r\n    const [orderedProducts, SetorderedProducts] = useState([]);\r\n    const [refreshCart, SetrefreshCart] = useState(\"change\");\r\n\r\n    const [Item, setItem] = useContext(CartContext);\r\n\r\n\r\n    const Prices = orderedProducts.map(o => {\r\n        return parseInt(o.price);\r\n    }).reduce(function (total, amount) {\r\n        return total + amount;\r\n    }, 0);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getOrderProducts();\r\n\r\n    }, [refreshCart]);\r\n\r\n    const getOrderProducts = async () => {\r\n        await axios.get(\"/orders\").then(res => {\r\n            console.log(res.data.data);\r\n            SetorderedProducts(res.data.data);\r\n            setItem(res.data.data.length);\r\n        })\r\n\r\n    }\r\n\r\n    const handleDeleteCart = async (deleteImageId) => {\r\n        await axios.delete(`/orders/deleteItems/${deleteImageId}`).then(res => {\r\n            console.log(res.data.data);\r\n            SetrefreshCart(\"refreshthecart\");\r\n            setItem(orderedProducts.length);\r\n        })\r\n    }\r\n\r\n\r\n    const updateQunatity = async (UpdateProductId, Quantitycount, UpdatedPrice) => {\r\n\r\n        const updateQunatityData = {\r\n            UpdateProductId, Quantitycount, UpdatedPrice\r\n        }\r\n\r\n        await axios.post('/orders/updateQuantity', updateQunatityData).then(res => {\r\n            console.log(res.data.data);\r\n            getOrderProducts();\r\n        })\r\n    }\r\n\r\n    const handleIncrement = (newQuantity_1, productid_1, Price1, OriginalPrice1) => {\r\n        const NewPrice_1 = Price1 + OriginalPrice1;\r\n        updateQunatity(productid_1, parseInt(newQuantity_1) + 1, NewPrice_1);\r\n    }\r\n\r\n    const handleDecrement = (newQuantity_2, productid_2, Price2, OriginalPrice2) => {\r\n        if (newQuantity_2 == 1) {\r\n            updateQunatity(productid_2, 1, parseInt(OriginalPrice2));\r\n        } else {\r\n            const NewPrice_2 = Price2 - OriginalPrice2;\r\n            updateQunatity(productid_2, parseInt(newQuantity_2) - 1, NewPrice_2);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Cart Page</h1>\r\n            <h4>Items in Cart</h4>\r\n            <div className=\"container p-2\">\r\n                <div className=\"row \">\r\n                    <div className=\"col text-center\">\r\n                        {\r\n                            refreshCart && orderedProducts.map((order, index) => (\r\n                                <div key={index} className=\"cartComponent\">\r\n                                    <Card className={classes.root}>\r\n                                        <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n\r\n                                            <Button size=\"small\" style={{ color: \"red\" }} onClick={() => handleDeleteCart(order.productId)}><i className=\"fa fa-trash fa-lg\" aria-hidden=\"true\"></i>&nbsp;Remove</Button>\r\n                                        </div>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                alt={order.productName}\r\n                                                height=\"100%\"\r\n                                                image={order.productImagePath}\r\n                                                title={order.productName}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {order.productName}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                        <CardActions>\r\n                                            <Button size=\"small\" color=\"primary\">\r\n                                                Price: ${order.price}\r\n                                            </Button>\r\n\r\n                                            <Button variant=\"contained\" size=\"small\" onClick={() => handleDecrement(order.quantity, order.productId, order.price, order.originalPrice)}>\r\n                                                -\r\n                                            </Button>\r\n                                            <Button>{order.quantity}</Button>\r\n                                            <Button variant=\"contained\" size=\"small\" onClick={() => handleIncrement(order.quantity, order.productId, order.price, order.originalPrice)} >\r\n                                                +\r\n                                            </Button>\r\n\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"btn btn-success rounded-pill p-2 mt-5\">Total Price : ${Prices}</h1>\r\n                <div className=\"cartTotal\" >\r\n                </div>\r\n            </div>\r\n            <Bottom data={3} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","F:\\newGOX\\my-app\\src\\components\\Profile.js",["93"],"import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport Bottombar from './Bottombar';\r\nimport './Profile.css';\r\nimport Bottom from './Bottom';\r\n\r\nconst Profile = () => {\r\n    const [ProfileData, setProfileData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getUserProfileDetails();\r\n    }, []);\r\n\r\n\r\n    const getUserProfileDetails = async () => {\r\n        await axios.get(\"/profile\").then(res => {\r\n            console.log(res.data.data);\r\n            setProfileData(res.data.data);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n            {ProfileData.map((data, index) => (\r\n                <div key={index}>\r\n                  <form>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <h5 htmlFor=\"name\" className=\"m-2 w-25\" style={{\"display\":\"flex\"}}>Name</h5>\r\n                                    <input type=\"text\" className=\"form-control m-2\" id=\"name\" name=\"name\" value={data.name} required />\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <h5 htmlFor=\"useremail\" className=\"m-2\"  style={{\"display\":\"flex\"}}>Email</h5>\r\n                                    <input type=\"email\" className=\"form-control m-2\" id=\"useremail\" name=\"useremail\" value={data.email} required />\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <h5 htmlFor=\"PhoneNumber\" className=\"m-2\"  style={{\"display\":\"flex\"}}>Phone Number</h5>\r\n                                    <input type=\"text\" className=\"form-control m-2\" id=\"PhoneNumber\" name=\"PhoneNumber\" value={data.phoneNumber} required />\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <h5 htmlFor=\"Address\" className=\"m-2\"  style={{\"display\":\"flex\"}}>Address</h5>\r\n                                    <textarea type=\"text\" className=\"form-control m-2\" id=\"Address\" name=\"Address\" rows=\"5\" cols=\"10\" value={data.address} required />\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <h5 htmlFor=\"Pincode\" className=\"m-2\"  style={{\"display\":\"flex\"}}>Pincode</h5>\r\n                                    <input type=\"number\" className=\"form-control m-2\" id=\"Pincode\" name=\"Pincode\" value={data.pincode} required />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row p-4\">\r\n                                <div className=\"col-md-6\">\r\n                                    <button className=\"btn btn-primary rounded-pill\" >Edit Profile</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            ))}\r\n            <Bottom data={4}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","F:\\newGOX\\my-app\\src\\components\\Product.js",["94","95","96","97"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from './axios';\r\nimport Bottombar from './Bottombar';\r\nimport './main.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReactJsAlert from \"reactjs-alert\";\r\nimport { CartContext } from '../context/CartContext';\r\nimport './Modal.css';\r\n\r\nconst Product = (props) => {\r\n    const [productData, SetproductData] = useState([]);\r\n    const [imageData, SetimageData] = useState(0);\r\n    const history = useHistory();\r\n    const [whenAdded, SetwhenAdded] = useState(false);\r\n    const [Item, setItem] = useContext(CartContext);\r\n\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, [])\r\n\r\n\r\n\r\n    const getProducts = async () => {\r\n        axios.get(`/product/${props.location.productData}`).then(res => {\r\n            console.log(res.data.data);\r\n            SetproductData(res.data.data);\r\n        })\r\n    }\r\n\r\n    const handleImageChange = (image) => {\r\n        SetimageData(image);\r\n    }\r\n\r\n    const handleBack = () => {\r\n        history.push({\r\n            pathname: '/',\r\n        });\r\n    }\r\n\r\n    const handleCartEvent = async (indexData )=> {\r\n        \r\n        const orderData = productData[indexData];\r\n\r\n        await axios.post(\"/orders/addToCart\", { orderData }).then(res => {\r\n            console.log(res.data);\r\n            SetwhenAdded(true);\r\n        })\r\n\r\n        setItem(Item + 1);\r\n    }\r\n\r\n    const handleCart = () => {\r\n        history.push('/cart');\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container p-2 Modal__nav\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"navitem\">\r\n                            <p onClick={handleBack}><i className=\"fas fa-arrow-left fa-lg\" ></i></p>\r\n                            <p onClick={handleCart}><i className=\"fas fa-shopping-bag fa-lg\"></i>{Item}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                                {productData.map((item, index) => {\r\n                                    if (index === imageData) {\r\n                                        return (\r\n                                            <div className=\"Model__MainDiv\" key={item.imageId}>\r\n                                                <div className=\"container\">\r\n                                                    <div className=\"row\">\r\n                                                         <div className=\"MainContainer\">\r\n                                                                  <p className=\"Model__CategoryName\">{item.categoryName}</p>\r\n                                                                    <h4 className=\"Model__Productname\"><b>{item.productName}</b></h4>\r\n                                                                    <p className=\"Model__From\">FROM</p>\r\n                                                                    <p className=\"Model__Price\">$ {item.price}</p>\r\n                                                                    <p className=\"Model__availableColors\">Available colors</p>\r\n                                                                    <div className=\"Model__Colors\">\r\n                                                                    {productData.map((i, index) => (\r\n                                                                            <div key={index} className=\"maindot p-1\">\r\n                                                                                <span className=\"dot\" style={{ backgroundColor: i.imageColor }} onClick={() => handleImageChange(index)} ></span>\r\n                                                                            </div>\r\n                                                                        ))}\r\n                                                                    </div>\r\n\r\n                                                             <div className=\"ImageContainer\">\r\n                                                             <img src={item.productImagePath} className=\"img-fluid\" alt=\"Responsive image\" />\r\n                                                             </div>\r\n                                                         \r\n                                                         </div>\r\n\r\n                                                        <div className=\"Model__DescMain\">\r\n                                                            <h4 className=\"card-text Model_DescriptionTitle\" style={{ display: \"flex\" }}>Description</h4>\r\n                                                            <p className=\"Model__Description\"> {item.productDescription}</p>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"container p-4\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-5 text-center\">\r\n                                                            <button className=\"form-control rounded-pill text-center text-white\" style={{ backgroundColor: \"#8A2BE2\", height: \"50px\" }} onClick={() => handleCartEvent(index)} ><b>ADD TO CART</b></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        )\r\n                                    }\r\n                                })}\r\n                            </div>\r\n            {\r\n                whenAdded && <ReactJsAlert\r\n                    type=\"success\"\r\n                    title=\"Hey! Your Product is Added to Cart\"\r\n                    status={true}\r\n                    button=\"Okay\"\r\n                    color=\"#1d36ad\"\r\n                    quote=\"Do Check Your Item in Cart\"\r\n                    Close={() => SetwhenAdded(false)}\r\n                />\r\n            }\r\n\r\n            {/* <Bottombar /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","F:\\newGOX\\my-app\\src\\components\\Items.js",["98","99"],"import React, { useState, useEffect,useContext } from 'react';\r\nimport axios from './axios';\r\nimport BottomBar from './Bottombar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./main.css\"\r\nimport { CartContext } from '../context/CartContext';\r\n\r\nconst Items = (props) => {\r\n    const [productData, SetproductData] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const [Item, setItem] = useContext(CartContext);\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, [])\r\n\r\n\r\n    const getProducts = async () => {\r\n        axios.get(`/category/get/${props.location.productData}`).then(res => {\r\n            console.log(res.data.data);\r\n            SetproductData(res.data.data);\r\n        })\r\n    }\r\n\r\n    const getSpecificProduct = (product) => {\r\n        history.push({\r\n            pathname: '/product',\r\n            productData: product,\r\n        });\r\n    }\r\n\r\n    const handleBack = () => {\r\n        history.push({\r\n            pathname: '/',\r\n        });\r\n    }\r\n\r\n    const handleCart = () => {\r\n        history.push('/cart');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div className=\"container p-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"navitem\">\r\n                            <p onClick={handleBack}><i className=\"fas fa-arrow-left fa-lg\" ></i></p>\r\n                            <h4> Listing {props.location.productData} Products...</h4>\r\n                            <p onClick={handleCart}><i className=\"fas fa-shopping-bag fa-lg\"></i>{Item}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row p-2\">\r\n                         <div className=\"mywrapper\">\r\n                        {productData.map(item => (\r\n                        <div key={item.imageId} onClick={() => getSpecificProduct(item.groupId)}>\r\n                               <div className=\"col\">\r\n                                    <div className=\"Search__Cards\">\r\n                                        <div className=\"card Search__card\" style={{ width: \"8rem\" }}>\r\n                                            <img className=\"card-img-top img-fluid rounded\" src={item.productImagePath} alt={item.categoryName} />\r\n                                            <div className=\"card-body\">\r\n                                                <p className=\"card-text CategoryRecommended__Name\">{item.categoryName}</p>\r\n                                                <p className=\"card-text\">$ {item.price}</p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    ))}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n                \r\n            <BottomBar />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Items;\r\n","F:\\newGOX\\my-app\\src\\context\\CartContext.js",[],"F:\\newGOX\\my-app\\src\\components\\Model.js",["100","101","102"],"import React, { useState, useEffect, useContext, forwardRef, useImperativeHandle } from 'react';\r\nimport axios from './axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReactJsAlert from \"reactjs-alert\";\r\nimport { CartContext } from '../context/CartContext';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport \"./Modal.css\";\r\nimport \"./main.css\";\r\n\r\nconst Model = forwardRef((props, ref) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [productData, SetproductData] = useState([]);\r\n    const [imageData, SetimageData] = useState(0);\r\n    const history = useHistory();\r\n    const [whenAdded, SetwhenAdded] = useState(false);\r\n    const [Item, setItem] = useContext(CartContext);\r\n\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            open: () => setOpen(true),\r\n            close: () => setOpen(false),\r\n            call: (val) => { getProducts(val) }\r\n        }\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     getProducts();\r\n    // }, [])\r\n\r\n\r\n    const getProducts = async (val) => {\r\n        axios.get(`/product/${val}`).then(res => {\r\n            console.log(res.data.data);\r\n            SetproductData(res.data.data);\r\n        })\r\n    }\r\n\r\n    const handleImageChange = (image) => {\r\n        SetimageData(image);\r\n    }\r\n\r\n\r\n    const handleCartEvent = async (indexData) => {\r\n\r\n        const orderData = productData[indexData];\r\n\r\n        await axios.post(\"/orders/addToCart\", { orderData }).then(res => {\r\n            console.log(res.data);\r\n            SetwhenAdded(true);\r\n        })\r\n\r\n        setItem(Item + 1);\r\n    }\r\n\r\n    const handleCart = () => {\r\n        history.push('/cart');\r\n    }\r\n\r\n    return (\r\n        <AnimatePresence>\r\n            {open && <div>\r\n                <motion.div\r\n                    initial={{\r\n                        opacity: 0\r\n\r\n                    }}\r\n                    animate={{\r\n                        opacity: 1,\r\n                        transition: {\r\n                            duration: 0.3\r\n                        }\r\n                    }}\r\n                    exit={{\r\n                        opacity: 0\r\n                    }}\r\n                    // onClick={() => setOpen(false)}\r\n                    className=\"modal-backdrop\">\r\n                    <motion.div\r\n                        initial={{\r\n                            scale: 0\r\n                        }}\r\n                        animate={{\r\n                            scale: 1,\r\n                            transition: {\r\n                                duration: 0.3\r\n                            }\r\n                        }}\r\n                        exit={{\r\n                            scale: 0\r\n                        }}\r\n                        className=\"modal-content-wrapper\">\r\n                        <motion.div className=\"modal-content\">\r\n\r\n                            <div className=\"container Modal__nav\">\r\n                                <div className=\"row p-2\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"navitem \">\r\n                                            <p onClick={() => setOpen(false)}><i className=\"fas fa-arrow-left fa-lg\" ></i></p>\r\n                                            <p onClick={handleCart}><i className=\"fas fa-shopping-bag fa-lg\"></i>{Item}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                {productData.map((item, index) => {\r\n                                    if (index === imageData) {\r\n                                        return (\r\n                                            <div className=\"Model__MainDiv\" key={item.imageId}>\r\n                                                <div className=\"container\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"MainContainer\">\r\n                                                            <p className=\"Model__CategoryName\">{item.categoryName}</p>\r\n                                                            <h4 className=\"Model__Productname\"><b>{item.productName}</b></h4>\r\n                                                            <p className=\"Model__From\">FROM</p>\r\n                                                            <p className=\"Model__Price\">$ {item.price}</p>\r\n                                                            <p className=\"Model__availableColors\">Available colors</p>\r\n                                                            <div className=\"Model__Colors\">\r\n                                                                {productData.map((i, index) => (\r\n                                                                    <div key={index} className=\"maindot p-1\">\r\n                                                                        <span className=\"dot\" style={{ backgroundColor: i.imageColor }} onClick={() => handleImageChange(index)} ></span>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n\r\n                                                            <div className=\"ImageContainer\">\r\n                                                                <img src={item.productImagePath} className=\"img-fluid\" alt=\"Responsive image\" />\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"Model__DescMain\">\r\n                                                            <h4 className=\"card-text Model_DescriptionTitle\" style={{ display: \"flex\" }}>Description</h4>\r\n                                                            <p className=\"Model__Description\"> {item.productDescription}</p>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"container p-4\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-5 text-center\">\r\n                                                            <button className=\"form-control rounded-pill text-center text-white\" style={{ backgroundColor: \"#8A2BE2\", height: \"50px\" }} onClick={() => handleCartEvent(index)} ><b>ADD TO CART</b></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        )\r\n                                    }\r\n                                })}\r\n                            </div>\r\n                            {\r\n                                whenAdded && <ReactJsAlert\r\n                                    type=\"success\"\r\n                                    title=\"Hey! Your Product is Added to Cart\"\r\n                                    status={true}\r\n                                    button=\"Okay\"\r\n                                    color=\"#1d36ad\"\r\n                                    quote=\"Do Check Your Item in Cart\"\r\n                                    Close={() => SetwhenAdded(false)}\r\n                                />\r\n                            }\r\n\r\n                        </motion.div>\r\n                    </motion.div>\r\n                </motion.div>\r\n            </div>}\r\n        </AnimatePresence>\r\n    );\r\n}\r\n);\r\nexport default Model;\r\n",["103","104"],"F:\\newGOX\\my-app\\src\\components\\Axios.js",[],"F:\\newGOX\\my-app\\src\\components\\axios.js",[],"F:\\newGOX\\my-app\\src\\components\\Bottom.js",["105","106","107","108"],"import React,{useState, useEffect}from 'react'\r\nimport \"./Bottom.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Bottom = (props) => {\r\n  const [itemvalue,setItemvalue]=useState(0);\r\n  const [navState,setNavState]=useState({\r\n     homeCss:\"navb\",\r\n     searchCss:\"navb\",\r\n     cartCss:\"navb\",\r\n     profileCss:\"navb\",\r\n  })\r\n\r\n  const [Whitecolor,setWhitecolor]=useState({\r\n     homeWhite:{color:\"white\"},\r\n     searchwhite:{color:\"white\"},\r\n     cartWhite:{color:\"white\"},\r\n     profilewhite:{color:\"white\"},\r\n  })\r\n\r\n\r\n    useEffect(()=>{\r\n          setItemvalue(props.data);\r\n    },[]);\r\n\r\n     if(itemvalue===1){\r\n      navState.homeCss=\"navb navbar__home\";\r\n     \r\n     }else if(itemvalue===2){\r\n      navState.searchCss=\"navb navbar__search\";\r\n\r\n\r\n     }else if(itemvalue===3){\r\n      navState.cartCss=\"navb navbar__cart\";\r\n\r\n\r\n     }else if(itemvalue===4){\r\n      navState.profileCss=\"navb navbar__profile\";\r\n    \r\n     }\r\n   \r\n\r\n  return (\r\n    <div className=\"Bottom__Container\">\r\n      <div className=\"navbar\">\r\n        <div className={navState.homeCss}>\r\n          <NavLink to='/' style={{ \"textDecoration\": 'none' }}>\r\n            <div className=\"tabs\">\r\n              <i className=\"fas fa-home homeicon\"  style={ itemvalue ===1 ? { color:'white'} : {color : 'black'} }></i>\r\n              <i className=\"home\" >Home</i>\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n        <div className={navState.searchCss}>\r\n          <NavLink to='/search' style={{ \"textDecoration\": 'none' }}>\r\n            <div className=\"tabs\">\r\n              <i className=\"fas fa-search searchicon\"  style={ itemvalue ===2 ? { color:'white'} : {color : 'black'} } ></i>\r\n              <i className=\"search\" >Search</i>\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n        <div className={navState.cartCss}>\r\n          <NavLink to='/cart' style={{ \"textDecoration\": 'none' }} >\r\n            <div className=\"tabs\">\r\n              <i className=\"fas fa-shopping-bag carticon\" style={ itemvalue ===3 ? { color:'white'} : {color : 'black'} }  ></i>\r\n              <i className=\"cart\" >Cart</i>\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n        <div className={navState.profileCss}>\r\n          <NavLink to='/profile' style={{ \"textDecoration\": 'none' }}>\r\n            <div className=\"tabs\">\r\n              <i className=\"fas fa-user profileicon\" style={ itemvalue ===4 ? { color:'white'} : {color : 'black'} } ></i>\r\n              <i className=\"profile\">Profile</i>\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Bottom\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":8,"column":16,"nodeType":"115","messageId":"116","endLine":8,"endColumn":23},{"ruleId":"113","severity":1,"message":"117","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":24,"column":8,"nodeType":"120","endLine":24,"endColumn":21,"suggestions":"121"},{"ruleId":"113","severity":1,"message":"117","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"122","line":27,"column":12,"nodeType":"115","messageId":"116","endLine":27,"endColumn":16},{"ruleId":"118","severity":1,"message":"123","line":41,"column":8,"nodeType":"120","endLine":41,"endColumn":21,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":79,"column":27,"nodeType":"127","messageId":"128","endLine":79,"endColumn":29},{"ruleId":"113","severity":1,"message":"117","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":17},{"ruleId":"118","severity":1,"message":"129","line":20,"column":8,"nodeType":"120","endLine":20,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":70,"column":64,"nodeType":"133","messageId":"134","endLine":70,"endColumn":66},{"ruleId":"135","severity":1,"message":"136","line":91,"column":62,"nodeType":"137","endLine":91,"endColumn":142},{"ruleId":"113","severity":1,"message":"114","line":12,"column":18,"nodeType":"115","messageId":"116","endLine":12,"endColumn":25},{"ruleId":"118","severity":1,"message":"129","line":15,"column":8,"nodeType":"120","endLine":15,"endColumn":10,"suggestions":"138"},{"ruleId":"113","severity":1,"message":"139","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":109,"column":64,"nodeType":"133","messageId":"134","endLine":109,"endColumn":66},{"ruleId":"135","severity":1,"message":"136","line":130,"column":65,"nodeType":"137","endLine":130,"endColumn":145},{"ruleId":"109","replacedBy":"140"},{"ruleId":"111","replacedBy":"141"},{"ruleId":"113","severity":1,"message":"142","line":7,"column":19,"nodeType":"115","messageId":"116","endLine":7,"endColumn":30},{"ruleId":"113","severity":1,"message":"143","line":14,"column":10,"nodeType":"115","messageId":"116","endLine":14,"endColumn":20},{"ruleId":"113","severity":1,"message":"144","line":14,"column":21,"nodeType":"115","messageId":"116","endLine":14,"endColumn":34},{"ruleId":"118","severity":1,"message":"145","line":24,"column":7,"nodeType":"120","endLine":24,"endColumn":9,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'setItem' is assigned a value but never used.","Identifier","unusedVar","'Bottombar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSearchResult'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'Item' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrderProducts'. Either include it or remove the dependency array.",["150"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["151"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["152"],"'useEffect' is defined but never used.",["147"],["148"],"'setNavState' is assigned a value but never used.","'Whitecolor' is assigned a value but never used.","'setWhitecolor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array. If 'setItemvalue' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getSearchResult, searchValue]",{"range":"163","text":"164"},"Update the dependencies array to be: [getOrderProducts, refreshCart]",{"range":"165","text":"166"},"Update the dependencies array to be: [getProducts]",{"range":"167","text":"168"},{"range":"169","text":"168"},"Update the dependencies array to be: [props.data]",{"range":"170","text":"171"},[670,683],"[getSearchResult, searchValue]",[1244,1257],"[getOrderProducts, refreshCart]",[668,670],"[getProducts]",[488,490],[597,599],"[props.data]"]